创建仓库：       git init
将文件添加到仓库：git add "filename" 例如：git add readme.txt
               git add . 批量添加文件
将文件提交给仓库：git commit -m "提交说明"
显示仓库当前状态：git status
查看difference：git diff
查看提交日志：   git log
查看简单提交日志：git log --pretty=oneline
回退版本       ：git reset --hard HEAD 例：回退上一个版本HEAD^,回退上上个版本HEAD^,回退上100个版本HEAD~100
              ：git reset --hard "commit id" 例：git reset --hard 3628164
查看操作记录（可看到commit id）：git reflog
删除文件       ：git rm filename 例：git rm test.txt 可恢复：git checkout -- test.txt
连接远程GitHub：
1.创建SSH Key：ssh-keygen -t rsa -C "yourmail@example.com"
2.添加SSH Key到Github上
本地库关联远程库：git remote add origin git@github.com:dongxiaoping1015/repositoryname.git
把本地仓库内容推送到远程库：git push -u origin master  master是分支名，第一次推送时加-u可以使本地master和远程master合并
                    之后推送直接 git push origin master
从远程库获取最新版本到本地：
1.不会自动merge
git fetch origin master 从远程origin的master主分支下载最新的版本到origin/master分支上
git log -p master..origin/master 比较本地的master分支和origin/master分支的差别
git merge origin/master 进行合并
或（git fetch origin master:tmp
    git diff tmp
    git merge tmp 从远程获取最新版本到本地test分支上，之后再进行比较合并）
2.git pull origin master 从远程获取最新版本并merge到本地
将远程库克隆到本地：
git clone git@github.com:dongxioaping1015/name.git
克隆某一分支
git clone --branch 0.4.10 git@github.com:bottlepy/bottle.git
切换分支：git checkout -b 分支名 -b参数表示创建并切换，无参数则表示切换分支
查看分支：git branch
git merge 分支名：合并指定分支到当前分支
 （查看分支：git branch

创建分支：git branch <name>

切换分支：git checkout <name>

创建+切换分支：git checkout -b <name>

合并某分支到当前分支：git merge <name>

删除分支：git branch -d <name>）

